/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <bits/stdc++.h>

using namespace std;

queue<int>q ;
void bfs(vector<vector<int>>&g,vector<int>&vis,int i)
{
    q.push(i);
    vis[i]=1;
    while(!q.empty())
    {
        for(auto adj_node : g[i])
        {
            if(!vis[adj_node])
            {
                q.push(adj_node);
                vis[adj_node]=1;
            }
        }
        int node=q.front();
        q.pop();
        cout<<node<<" ";
    }
    
}

void printbfs(vector<vector<int>>&g)
{
    vector<int>vis(g.size(),0);
    vis[0]=1;
    for(int i=1;i<g.size();i++)
    {
        if(vis[i]==0)
        {
            bfs(g,vis,i);
        }
    }
    cout<<"\n";
}

int main()
{
    int node=5;
     vector<vector<int>> grf2(node+1,vector<int>(0,0));
     
    // now fill the grf2
    cout << "\n\n\nNumber of nodes in graph : " << grf2.size() << endl;
    grf2[1].push_back(2);
    grf2[1].push_back(4);
    
    grf2[2].push_back(1);
    grf2[2].push_back(3);
    
    grf2[3].push_back(2);
    grf2[3].push_back(5);
    grf2[3].push_back(4);
    
    grf2[4].push_back(1);
    grf2[4].push_back(3);
    grf2[4].push_back(5);
    
    grf2[5].push_back(3);
    grf2[5].push_back(4);
    
    // lets print our graph
    
    for(int i=0;i<grf2.size();i++)
    {
        cout << i << " --> ";
        for(auto e:grf2[i])
        {
            cout << e << " ";
        }
        cout << "\n";
    }
     printbfs(grf2);
    return 0;
}
